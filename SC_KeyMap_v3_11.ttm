//  -- 09/29/2020 --
//  ** Star Citizen Keybinds **

// This File Should Match Game Binds
// Spacing is what gets the Script to list correctly when importedd into GUI


/// Action                                                   Binding


//  spaceship_general **********************


define eject USB_Y                                              // Eject - explosively propels the pilot out of the cockpit
define eject_cinematic USB_Y
define exit USB_Y                                               // Exit seat - player's character stands up from whatever seat he's sitting in
define self_destruct BSP                                        // Self Destruct - causes the craft to explode
define emergency_exit USB_U+L_SHIFT
define cooler_throttle_up L_ALT+USB_KP_8                        // Increase Cooler Rate - Increases the rate at which the ship's cooler removes heat from components
define cooler_throttle_down L_ALT+USB_KP_7                      // Decrease Cooler Rate - Reduces power consumption at the cost of increasing the rate at which ship components heat up
define flightready USB_R                                        // Flight / Systems Ready - turns on power and engines to move the ship into flight ready state without the need to activate the systems individually
define toggle_all_doors USB_K                                   // Close All Doors - closes all entry points available on the ship, including elevators and ramps
define open_all_doors ''                                        // Doors Need Air
define close_all_doors ''                                       // Those Doors Close Em
define toggle_all_doorlocks USB_L                               // Toggles locks all entry points available on the ship, including elevators and ramps
define lock_all_doors ''                                        // Now Lock Em
define unlock_all_doors ''                                      // Unlock All Doors - unlocks all entry points available on the ship, including elevators and ramps


// spaceship_view **********************


define view_yaw_left   DXHATLEFT                                // Look left - look toward the left
define view_yaw_right  DXHATRIGHT                               // Look right - look toward the right
define view_pitch_up   DXHATUP                                  // Look up - look above
define view_pitch_down DXHATDOWN                                // Look down - look below
define view_cycle_fwd USB_F4                                    // Cycle camera view - changes to third person view and back again to first person
define view_cycle_internal_fwd ''                               //
define view_option ''                                           //
define view_mode L_CTL+F4                                             //
define view_zoom_in    DX26                                     // Zoom in(3rd person view) - unresponsive when assigned
define view_zoom_out   DX25                                     // Zoom out(3rd person view) - unresponsive when assigned
define view_interact USB_F                                       //
define view_freelook_mode USB_Z                                 // Freelook(Toggle) - allows you to move the camera around freely when in flight mode or third person mode without moving your character or ship
define view_dynamic_zoom_rel ''
define view_dynamic_zoom_rel_in DX23                            // Dynamic zoom In - incremental zoom in
define view_dynamic_zoom_rel_out DX24                           // Dynamic zoom Out - incremental zoom out
define view_dynamic_zoom_abs_toggle ''
define view_look_behind L_ALT+USB_Z                             // Look behind (hold button) - look behind when in flight mode


//  spaceship_movement **********************


define pitch_up ''                                              // Pitch up - rotate the ship toward the upwards position
define pitch_down ''                                            // Pitch down - rotate the ship toward the downwards position
define yaw_left ''                                              // Yaw left - rotate the ship to the left
define yaw_right ''                                             // Yaw right - rotate the ship to the right
define toggle_relative_mouse_mode L_ALT+USB_COMMA               // Cycle mouse move mode - changes between mouse recentering mode and move toward pointer mode
define roll_left USB_Q                                          // Roll left - rotate the ship along the z-axis to the left
define roll_right USB_E                                         // Roll right - rotate the ship along the z-axis to the right
define roll_mouse ''                                            //
define toggle_yaw_roll_swap L_ALT+USB_PERIOD                    // Swap Yaw / Roll (Toggle) - switches the device controlling yaw (rotation along the y-axis) to instead temporarily control roll (rotation along the z-axis)
define target_match_vel DX19                                    // Match target velocity - CURRENTLY NON-FUNCTIONAL - sets your speed limiter to that of the target
define v_brake USB_X                                            // Spacebrake - slows down acceleration as fast as possible
define lock_rotation R_SHIFT                                    // Needs Tested
define speed_range_up ''                                        // Speed Limiter Increase - raises the speed limiter setting. Use this in combination with cruise control to maintain the speed you set
define speed_range_down ''                                      // Speed Limiter Decrease - lowers the speed limiter setting. Use this in combination with cruise control to maintain the speed you set
define accel_range_up DX20                                      //
define accel_range_down DX21                                    //
define ifcs_toggle_vector_decoupling USB_V                      // Decoupled mode(Toggle) - decoupling engines allows you to change the direction of your ship while moving along a straight line
define strafe_up SPC                                            // Strafe up - move the ship upwards
define strafe_down L_CTL                                        // Strafe down - move the ship downwards
define strafe_left USB_A                                        // Strafe left - move the ship left (no rotation) 
define strafe_right             USB_D                           // Strafe right - move the ship right (no rotation)
define strafe_forward USB_W                                     // Throttle forward - accelerate 
define strafe_back USB_S                                        // Throttle back - decelerate / accelerate backwards
define strafe_longitudinal_invert DX28                          // Strafe forward / back invert - changes throttle forward to backwards and vice versa
define ifcs_toggle_speed_limiter L_ALT+USB_C                    // Speed Limiter(Toggle) - turns on and off the speed limiter. OFF = speed is unrestricted, no Cruise control available. The speed limit line on your velocity bar will be pinned at the top. ON = returns you to previously set speed limit.
define ifcs_toggle_gforce_safety L_ALT+USB_V                    // G-force safety(Toggle) - turns on and off g-force safety to assist you from blacking out in the cockpit
define ifcs_toggle_esp L_ALT+USB_O                              // E.S.P.(Toggle) - turns on and off aim assistance
define ifcs_toggle_cruise_control USB_C                         // Cruise Control(toggle) - turns on and off continuous thrust. With speed limiter on and set to a particular speed, the ship flies at that speed with cruise control on
define afterburner L_SHIFT                                      // Afterburner - accelerate faster. Can cause engines to overheat quickly
define toggle_landing_system    USB_N                           // Landing System - lowers and raises the landing gears of a ship
define toggle_vtol USB_J                                        // Toggle Engines to Vtol Mode on Supporting Ships
define autoland USB_N                                           // Autoland - holding this button while in the landing marker will cause the ship to automatically land
define toggle_qdrive_spooling   USB_B                           // Quantum Travel System(Toggle) - turns on quantum engine spooling to prepare for Quantum Travel
define toggle_qdrive_engagement USB_B                           // Quantum Drive (hold) - hold the button to begin quantum travel after lining up the coordinates



//  spaceship_docking **********************


define toggle_docking_mode USB_N                                //
define invoke_docking USB_N                                     //



// spaceship_targeting **********************


define target_toggle_lock_index_1 USB_1
define target_toggle_lock_index_2 USB_2
define target_toggle_lock_index_3 USB_3
define target_toggle_pin_index_1 L_ALT+USB_1
define target_toggle_pin_index_2 L_ALT+USB_2
define target_toggle_pin_index_3 L_ALT+USB_3
define target_toggle_pin_index_1_hold ''
define target_toggle_pin_index_2_hold ''
define target_toggle_pin_index_3_hold ''
define target_pin_selected ''
define target_unpin_selected ''
define target_pin_selected_hold ''
define target_unpin_selected_hold ''
define target_remove_all_pins USB_0
define target_lock_selected ''
define target_unlock_selected L_ALT+USB_T
define look_ahead_enable L_ALT+USB_L                            //
define look_ahead_start_target_tracking ''                      //
define target_tracking_auto_zoom DX6
define target_cycle_reticle_mode R_ALT+USB_T                    // Reticle mode(Toggle) - switch between lining up your shots up with the leading reticle to lining up the small circles over the target ship. useful for sub-targeting
define enter_remote_turret_1 ''                                 //
define enter_remote_turret_2 ''                                 //
define enter_remote_turret_3 ''                                 //



// spaceship_targeting_advanced **********************

define target_cycle_selection_back ''                           
define target_cycle_selection_fwd ''                            
define target_cycle_selection_reset L_ALT+USB_R                 
define target_cycle_in_view_back ''                             
define target_cycle_in_view_fwd USB_T                           
define target_cycle_in_view_reset USB_T                         
define target_cycle_pinned_back ''                              // Cycle pinned targets(Back) - targets previous pinned target [must be within range]
define target_cycle_pinned_fwd ''                               // Cycle pinned targets - targets next pinned target [must be within range]
define target_cycle_pinned_reset ''                             
define target_cycle_attacker_back ''                            
define target_cycle_attacker_fwd USB_4                          
define target_cycle_attacker_reset L_ALT+USB_4                  
define target_cycle_hostile_back ''                             // Cycle hostile targets(Back) - targets previous hostile according to range
define target_cycle_hostile_fwd USB_5                           // Cycle hostile targets - targets next hostile according to range
define target_cycle_hostile_reset L_ALT+USB_5                   
define target_cycle_friendly_back ''                            // Cycle friendly targets(Back) - locks targeting on the previous friendly target
define target_cycle_friendly_fwd USB_6                          // Cycle friendly targets - locks targeting on the next friendly target organized by range
define target_cycle_friendly_reset L_ALT+USB_6                  
define target_cycle_all_back ''                                 // Cycle all targets(Back)
define target_cycle_all_fwd USB_7                               // Cycle all targets
define target_cycle_all_reset L_ALT+USB_7                       
define target_cycle_subitem_back ''                             // Cycle Sub-Target(Back) - target previous ship system (gun points, engines, power generators, etc.)
define target_cycle_subitem_fwd USB_8                           // Cycle Sub-Target - target next ship system (gun points, engines, etc.)
define target_cycle_subitem_reset L_ALT+USB_8                   


// spaceship_target_hailing ****************


define target_hail USB_9



// spaceship_scanning **********************


define toggle_scan_mode DX7                                         // Scanning Mode(Toggle) - switches targeting controls to scaning mode. All known ships have this to date. used to scan ships to reveal pilot name and ship type, along with locating other things in space like rocks that have resources in them for mining
define scanning_trigger_scan USB_RIGHTCONTROL+USB_COMMA             //



// spaceship_ping **********************


define invoke_ping DX5                                      // Scanning Radar Ping(hold) - this charges up a ping for the scanning radar. The longer you hold down the button, the farther the ping goes
define inc_ping_focus_angle DX31                                    // Scanning Increase Radar Angle - focuses radar incrementally into a tighter beam
define dec_ping_focus_angle DX32                                    // Scanning Decrease Radar Angle - decreases radar focus for a wider, more inclusive scan


// spaceship_mining **********************


define toggle_mining_mode  USB_M                                    // Mining Mode(Toggle) - switches targeting controls to mining mode if the ship has the capability
define toggle_mining_laser_fire DX1                                 // Fire Mining Laser(Toggle) - turns on the mining laser
define toggle_mining_laser_type DX27                                // Switch Mining Laser(Toggle) - changes mining laser from rock breaker to fine cutter mode
define increase_mining_throttle DX29                                // Increase Mining Laser Power - increases power to break apart rock or cut more effectively
define decrease_mining_throttle DX30                                // Decrease Mining Laser Power - decreases power to avert destroying the rock as it heats up
define mining_use_consumable1 L_ALT+USB_1
define mining_use_consumable2 L_ALT+USB_2
define mining_use_consumable3 L_ALT+USB_3
define jettison_volatile_cargo L_ALT+USB_T


// turret_main ****************************



// spaceship_weapons **********************

define attack1_group1 DX1                                           // Fire Weapon Group 1 - fires the main weapons. hold down to repeat fire
define attack1_group2 DX2                                           // Fire Weapon Group 2 - fires the secondary weapons. hold down to repeat fire
define weapon_cycle_ammo_fwd USB_RIGHTCONTROL+USB_CLOSEBRACKET      // Cycle Weapon Ammo - unresponsive when assigned
define weapon_cycle_ammo_back USB_RIGHTCONTROL+USB_OPENBRACKET      // Cycle Weapon Ammo(Back) - unresponsive when assigned
define weapon_cycle_gimbal_free_mode L_ALT+USB_G
define weapon_cycle_aimmode USB_G                                   // Cycle Gimbal Assist / Standard Gimbal / Gimbal Lock modes - Gimbal Assist mode helps with targeting and the weapons point toward the cursor instead of forward. Standard Gimbal no aim assist, but weapon movement is free. Gimbal Lock mode sets the gimbal weapons to forward facing


// spaceship_missiles **********************


define weapon_arm_missile DX3                            // Acquire missile lock - locks missile on target
define weapon_unarm_missile USB_LEFTCONTROL+USB_SLASH
define weapon_launch_missile DX4                         // Launch missile - launches missile at target

// spaceship_defensive **********************


define weapon_countermeasure_launch_decoy USB_H         // 
define weapon_countermeasure_launch_noise L_ALT+USB_J   // 
define weapon_countermeasure_launch_all ''              // 
define shield_raise_level_forward USB_KP_8              // Shield raise level front - raises shield power to the front
define shield_raise_level_back USB_KP_2                 // Shield raise level back - raises shield power to the rear
define shield_raise_level_left USB_KP_4                 // Shield raise level left - raises shield power to the left
define shield_raise_level_right USB_KP_6                // Shield raise level right - raise shield power to the right
define shield_raise_level_up USB_KP_7                   // Shield raise level top - raise shield power to the top
define shield_raise_level_down USB_KP_9                 // Shield raise level bottom - raise shield power to the bottom
define shield_reset_level USB_KP_5                      // Shield reset levels - resets all shield sides to equal power


// spaceship_auto_weapons **********************


define weapon_toggle_ai USB_SLASH                       //  New Command un tested


// spaceship_power **********************


define power_toggle USB_U                               // Power(Toggle) - turns on and off overall ship power
define power_toggle_thrusters USB_I                     // Power preset 3(Togle) - turns on and off engine power
define power_toggle_shields USB_O                       // Power preset 2(Toggle) - turns on and off shield power
define power_toggle_weapons USB_P                       // Power preset 1(Toggle) - turns on and off weapon power
define power_focus_thrusters USB_F5                     //(Down)// Power preset 3 (increase engine & decrease others) - incrementally redirects power to engines
define power_focus_shields USB_F6                       //(Right)// Power preset 2 (increase utility (shield) & decrease others) - incrementally redirects power to shields
define power_focus_weapons USB_F7                       //(Left)// Power preset 1 (increase weapons & decrease others) - incrementally redirects power to weapons
define power_reset_focus USB_F8                         // Reset Power Distribution - resets power distribution to equal shares throughout the ship
define power_throttle_down USB_F9                       // Decrease Power - decreases over all power to the ship's systems, reducing emissions
define power_throttle_min USB_F9                        // Decrease Power Min - sets power output to minimum
define power_throttle_up USB_F10                        // Increase Power - increases overall power to the ship's systems
define power_throttle_max USB_F10                       // Increase Power Max - sets power output to maximum


// spaceship_radar **********************


define radar_toggle_onoff ''                            //
define radar_toggle_active_or_passive DX17              //
define radar_cycle_mode_fwd DX22                        //
define radar_cycle_mode_back L_ALT+DX22                 //
define radar_cycle_zoom_fwd DX18                        //
define radar_cycle_zoom_back ''                         //
define radar_cycle_focus_fwd DX28                       //
define radar_cycle_focus_back L_ALT+DX28                //
define radar_toggle_view_focus ''                       //



// spaceship_hud **********************


define mobiglas F1                                      // MobiGlas - brings up player MobiGlas
define hud_open_scoreboard USB_TAB                      // Scoreboard - shows the player's score, and other players' scores if multiplayer mode for arena commander and star marine
define hud_interact_toggle ''
define hud_focused_cycle_mode_fwd ''
define hud_focused_cycle_mode_back ''
define hud_left_panel_up ''
define hud_left_panel_down ''
define hud_left_panel_left ''
define hud_left_panel_right ''
define hud_confirm ''
define hud_cancel ''
define starmap F2                                       // Map - activates the navigation map so you can set your destination and flight plan
define visor_wipe L_ALT+USB_X



// lights_controller **********************


define v_lights USB_L                                   // Headlights(Toggle) - turns on and off the ship's headlights


// prone **********************


define prone_rollleft  USB_A                            //
define prone_rollright USB_D                            //


// zero_gravity_eva **********************


define eva_boost L_SHIFT                                //
define eva_brake USB_X                                  //
define eva_roll_left USB_Q                              //
define eva_roll_right USB_E                             //
define eva_strafe_back USB_S                            //
define eva_strafe_down L_CTL                            //
define eva_strafe_forward USB_W                         //
define eva_strafe_left USB_A                            //
define eva_strafe_right USB_D                           //
define eva_strafe_up USB_SPACEBAR                       //
define eva_toggle_headlook_mode USB_Z                   //
define eva_view_yaw_left ''                             //
define eva_view_yaw_right ''                            //
define eva_view_pitch_up ''                             //
define eva_view_pitch_down ''                           //
define eva_pitch_up ''                                  //
define eva_pitch_down ''                                //
define eva_yaw_left ''                                  //
define eva_yaw_right ''                                 //


// vehicle_General **********************



define horn USB_SPACEBAR

// IFCS_controls *********************

define IFCS_A USB_RIGHTCONTROL+USB_A
define IFCS_B USB_RIGHTCONTROL+USB_B
define IFCS_X USB_RIGHTCONTROL+USB_X
define IFCS_Y USB_RIGHTCONTROL+USB_Y



// player_input_optical_tracking **********************

define headtrack_enabled ''
define headtrack_hold ''
define headtrack_recalibrate ''
define foip_pushtotalk USB_KP_PLUS
define foip_viewownplayer USB_KP_HYPHEN
define foip_recalibrate USB_KP_ASTERISK
define foip_cyclechannel USB_KP_PERIOD

// player_choice **********************


define pc_focus USB_RIGHTCONTROL+USB_F                  //
define pc_interaction_mode USB_F                        //
define pc_personal_back    USB_KP_0                     //
define pc_zoom_in ''                                    //
define pc_zoom_out ''                                   //
define pc_screen_focus_down USB_S                       //
define pc_screen_focus_left USB_A                       //
define pc_screen_focus_right USB_D                      //
define pc_screen_focus_up USB_W                         //
define pc_select ''                                     //
define pc_throw_decrease ''                             //
define pc_personal_thought USB_TAB                      //
define pc_pit_inventory USB_I                           //
define pc_pit_item_unstown USB_KP_2                     //
define pc_pit_item_drop USB_KP_3                        //
define pc_pit_empty_backpack USB_KP4                    //



// default **********************

define focus_on_chat_textinput ''  // np enter **** fix
define respawn USB_X
define toggle_chat USB_RIGHTCONTROL+USB_F12
define toggle_contact USB_F11


// EXTERNAL BINDINGS **********************


define ShowDiscordOverlay           ''                      // (Map this to your Discord Overlay hotkey - used to open/close Discord Overlay interface)
define ShowDiscordChatViaOverlay    ''                      // (Map this to your Discord Chat Overlay hotkey - used to open Chat from within the Overlay interface))
define ExternalVoiceCommsPTT_ALT    ''                      // (Map this to your Twitch/OBS/Youtube -> Secondary External PTT Key used with Modifier, mainly to support Streamers)
define InternalVoiceCommsPTT        USB_KP_PLUS             //
define ShowFramerate                ''                      //
define HighResScreenshot            ''                      //


// HMD **********************


define HMDCenter                    ''                      //


// TRACKIR **********************


define TrackIRCenter                USB_F12                 //
define TrackIRPause                 USB_PAUSE               //


// Discord, TS3, MUMBLE, VENTRILO **********************


define ExternalVoiceCommsPTT    USB_KP_PLUS                 // (Map this to your Discord/Ventrilo/Mumble/Skype/TS3/... PTT Key)


// VOICE ATTACK **********************


define ToggleVoiceAttackMic         ''                      //
define ToggleVoiceAttackGlobal      ''                      //


// NVIDIA SHADOWPLAY **********************


define NVidiaCaptureVideo           ''                      // L_ALT+F9
define NVidiaStreaming              ''                      // L_ALT+F8


// AMD RELIVE **********************


define AMDCaptureVideo              ''   // L_CTRL+L_SHIFT+R
define AMDStreaming                 ''   // L_CTRL+L_SHIFT+G


// EOF

